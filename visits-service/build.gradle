plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'io.freefair.lombok' version '6.0.0-m2'
	id 'jacoco'
}

group = 'com.petclinic.visits'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
//	implementation("org.mapstruct:mapstruct:${mapstructVersion}")

	compileOnly 'org.projectlombok:lombok'
//	compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.projectlombok:lombok'
//	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

//	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
	testImplementation 'io.projectreactor:reactor-test'

	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-commons:1.9.0'
}

jacoco {
	toolVersion = "0.8.8"
}

jacocoTestReport {
	dependsOn test

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com/petclinic/**/VisitsServiceApplication.class"
			])
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.90
			}
		}
	}
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification


test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}